/*
 * ADC_interface.h
 *
 * Created: 9/15/2021 2:17:18 PM
 *  Author: Karim Essam
 */ 


#ifndef ADC_INTERFACE_H_
#define ADC_INTERFACE_H_

typedef enum {
	ADC_MODE_SINGLE_CONVERSION,
	ADC_MODE_COUNTINOUS_CONVERSION
}ADC_Mode_t;

typedef enum {
	ADC_PRESCALAR_DIV_2 = 1,
	ADC_PRESCALAR_DIV_4,
	ADC_PRESCALAR_DIV_8,
	ADC_PRESCALAR_DIV_16,
	ADC_PRESCALAR_DIV_32,
	ADC_PRESCALAR_DIV_64,
	ADC_PRESCALAR_DIV_128
}ADC_Prescalar_t;

typedef enum {
	ADC_AUTO_TRIGGER_FREE_RUNNING,
	ADC_AUTO_TRIGGER_ANALOG_COMPARATOR,
	ADC_AUTO_TRIGGER_EXTI0,
	ADC_AUTO_TRIGGER_TIM0_COMPARE_MATCH,
	ADC_AUTO_TRIGGER_OVERFLOW,
	ADC_AUTO_TRIGGER_TIM1_COMPAE_MATCH_B,
	ADC_AUTO_TRIGGER_TIM1_OVERFLOW,
	ADC_AUTO_TRIGGER_TIM1_CAPTURE_EVENT
	
}ADC_AutoTrigger_t;

typedef enum {
	ADC_CHANNEL_SINGLE_0,
	ADC_CHANNEL_SINGLE_1,
	ADC_CHANNEL_SINGLE_2,
	ADC_CHANNEL_SINGLE_3,
	ADC_CHANNEL_SINGLE_4,
	ADC_CHANNEL_SINGLE_5,
	ADC_CHANNEL_SINGLE_6,
	ADC_CHANNEL_SINGLE_7,
	ADC_CHANNEL_DIFF_0_0_GAIN_10,
	ADC_CHANNEL_DIFF_1_0_GAIN_10,
	ADC_CHANNEL_DIFF_0_0_GAIN_200,
	ADC_CHANNEL_DIFF_1_0_GAIN_200,
	ADC_CHANNEL_DIFF_2_2_GAIN_10,
	ADC_CHANNEL_DIFF_3_2_GAIN_10,
	ADC_CHANNEL_DIFF_2_2_GAIN_200,
	ADC_CHANNEL_DIFF_3_2_GAIN_200,
	ADC_CHANNEL_DIFF_0_1_GAIN_1,
	ADC_CHANNEL_DIFF_1_1_GAIN_1,
	ADC_CHANNEL_DIFF_2_1_GAIN_1,
	ADC_CHANNEL_DIFF_3_1_GAIN_1,
	ADC_CHANNEL_DIFF_4_1_GAIN_1,
	ADC_CHANNEL_DIFF_5_1_GAIN_1,
	ADC_CHANNEL_DIFF_6_1_GAIN_1,
	ADC_CHANNEL_DIFF_7_1_GAIN_1,
	ADC_CHANNEL_DIFF_0_2_GAIN_1,
	ADC_CHANNEL_DIFF_1_2_GAIN_1,
	ADC_CHANNEL_DIFF_2_2_GAIN_1,
	ADC_CHANNEL_DIFF_3_2_GAIN_1,
	ADC_CHANNEL_DIFF_4_2_GAIN_1,
	ADC_CHANNEL_DIFF_5_2_GAIN_1,
	ADC_CHANNEL_SINGLE_1_22V,
	ADC_CHANNEL_SINGLE_GND,
}ADC_ChannelID_t;


void ADC_voidInit(ADC_Mode_t mode,ADC_AutoTrigger_t triggerSource, ADC_Prescalar_t prescalar);

u16 ADC_u16ReadChannel();

void ADC_voidEnableInterruptWithCallback(ADC_ChannelID_t channel , void (*callback)(u16));

void ADC_voidStartConversion(ADC_ChannelID_t channel);

void ADC_voidStartContinousMode(void);

void ADC_voidStopContinousMode(void);

#endif /* ADC_INTERFACE_H_ */